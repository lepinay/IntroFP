FP Advantages
	Conciseness. 
		No coding "noise" such as curly brackets, semicolons and so on. 
		Type inference You almost never have to specify the type of an object, 
		It generally takes less lines of code to solve the same problem.
	Convenience. 
		Creating and using complex type definitions
		List processing, comparison and equality, state machines...
		Easy to create powerful and reusable code by creating functions 
		that have other functions as parameters, or that combine existing functions to create new functionality.
	Correctness. 
		Powerful type system which prevents many common errors 
		such as null reference exceptions. 
		You can often encode business logic using the type system itself, 
		so that it is actually impossible to write incorrect code, 
		because it is caught at compile time as a type error.
		Concurrency.
	Multiparadigm.
		Easy to interop with .NET OO languages
